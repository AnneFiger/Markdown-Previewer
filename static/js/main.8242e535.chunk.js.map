{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","input","event","this","setState","target","value","renderedHTML","marked","sanitize","setOptions","breaks","className","name","id","rows","columns","onChange","handleChange","bind","dangerouslySetInnerHTML","__html","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAiGeA,E,kDA7Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAjDgB,6pCA8CD,E,gDAOnB,SAAaC,GACXC,KAAKC,SAAS,CACZH,MAAOC,EAAMG,OAAOC,U,oBAGxB,WACE,IAAMC,EAAeC,IAAOL,KAAKH,MAAMC,MAAO,CAAEQ,UAAU,IAI1D,OAHAD,IAAOE,WAAW,CAChBC,QAAQ,IAGR,sBAAKC,UAAU,MAAf,UAEI,sBAAKA,UAAU,SAAf,UACE,oBAAIA,UAAU,UAAd,oBACA,0BACEC,KAAK,OACLC,GAAG,SACHC,KAAK,KACLC,QAAQ,IACRV,MAAOH,KAAKH,MAAMC,MAClBgB,SAAUd,KAAKe,aAAaC,KAAKhB,WAIrC,sBAAKS,UAAU,YAAf,UACE,oBAAIA,UAAU,UAAd,uBACA,qBACEE,GAAG,UACHM,wBAAyB,CAAEC,OAAQd,e,GArC/Be,IAAMC,WCvCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8242e535.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport marked from \"marked\";\n\n\n\nconst templatemarkdown = `\n# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && , lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)'`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: templatemarkdown,\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      input: event.target.value,\n    });\n  }\n  render() {\n    const renderedHTML = marked(this.state.input, { sanitize: true });\n    marked.setOptions({\n      breaks: true,\n    });\n    return (\n      <div className=\"App\" >\n        \n          <div className=\"Editor\">\n            <h2 className=\"header1\">Editor</h2>\n            <textarea\n              name=\"text\"\n              id=\"editor\"\n              rows=\"10\"\n              columns=\"1\"\n              value={this.state.input}\n              onChange={this.handleChange.bind(this)}\n            ></textarea>\n          </div>\n          \n          <div className=\"Previewer\">\n            <h2 className=\"header2\">Previewer</h2>\n            <div\n              id=\"preview\"\n              dangerouslySetInnerHTML={{ __html: renderedHTML }}\n            ></div>\n          </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}